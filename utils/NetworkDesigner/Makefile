#############################################################################
# Makefile for building: NetworkDesigner
# Generated by qmake (2.01a) (Qt 4.8.0) on: Thu Feb 23 07:08:40 2012
# Project:  NetworkDesigner.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile NetworkDesigner.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -Isrc -I../../src -Ibuild/moc -Ibuild/ui
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L ../../src -l switched -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/obj/

####### Files

SOURCES       = src/main.cpp \
		src/mainwindow.cpp \
		src/iniparser.cpp \
		src/dictionary.cpp \
		src/netnode.cpp \
		src/netlink.cpp \
		src/networkdesc.cpp \
		src/networkgraphics.cpp build/moc/moc_mainwindow.cpp \
		build/moc/moc_netnode.cpp \
		build/moc/moc_netlink.cpp \
		build/moc/moc_networkdesc.cpp \
		build/moc/moc_networkgraphics.cpp \
		qrc_media.cpp
OBJECTS       = build/obj/main.o \
		build/obj/mainwindow.o \
		build/obj/iniparser.o \
		build/obj/dictionary.o \
		build/obj/netnode.o \
		build/obj/netlink.o \
		build/obj/networkdesc.o \
		build/obj/networkgraphics.o \
		build/obj/moc_mainwindow.o \
		build/obj/moc_netnode.o \
		build/obj/moc_netlink.o \
		build/obj/moc_networkdesc.o \
		build/obj/moc_networkgraphics.o \
		build/obj/qrc_media.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		NetworkDesigner.pro
QMAKE_TARGET  = NetworkDesigner
DESTDIR       = 
TARGET        = NetworkDesigner

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): build/ui/ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: NetworkDesigner.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile NetworkDesigner.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile NetworkDesigner.pro

dist: 
	@$(CHK_DIR_EXISTS) build/obj/NetworkDesigner1.0.0 || $(MKDIR) build/obj/NetworkDesigner1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/obj/NetworkDesigner1.0.0/ && $(COPY_FILE) --parents src/mainwindow.h src/netnode.h src/netlink.h src/networkdesc.h src/iniparser.h src/dictionary.h src/networkgraphics.h build/obj/NetworkDesigner1.0.0/ && $(COPY_FILE) --parents media.qrc build/obj/NetworkDesigner1.0.0/ && $(COPY_FILE) --parents src/main.cpp src/mainwindow.cpp src/iniparser.cpp src/dictionary.cpp src/netnode.cpp src/netlink.cpp src/networkdesc.cpp src/networkgraphics.cpp build/obj/NetworkDesigner1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.ui build/obj/NetworkDesigner1.0.0/ && (cd `dirname build/obj/NetworkDesigner1.0.0` && $(TAR) NetworkDesigner1.0.0.tar NetworkDesigner1.0.0 && $(COMPRESS) NetworkDesigner1.0.0.tar) && $(MOVE) `dirname build/obj/NetworkDesigner1.0.0`/NetworkDesigner1.0.0.tar.gz . && $(DEL_FILE) -r build/obj/NetworkDesigner1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: build/moc/moc_mainwindow.cpp build/moc/moc_netnode.cpp build/moc/moc_netlink.cpp build/moc/moc_networkdesc.cpp build/moc/moc_networkgraphics.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) build/moc/moc_mainwindow.cpp build/moc/moc_netnode.cpp build/moc/moc_netlink.cpp build/moc/moc_networkdesc.cpp build/moc/moc_networkgraphics.cpp
build/moc/moc_mainwindow.cpp: src/networkdesc.h \
		src/netnode.h \
		src/netlink.h \
		src/networkgraphics.h \
		src/mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/mainwindow.h -o build/moc/moc_mainwindow.cpp

build/moc/moc_netnode.cpp: src/netlink.h \
		src/netnode.h \
		src/networkdesc.h \
		src/netnode.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/netnode.h -o build/moc/moc_netnode.cpp

build/moc/moc_netlink.cpp: src/netnode.h \
		src/netlink.h \
		src/networkdesc.h \
		src/netlink.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/netlink.h -o build/moc/moc_netlink.cpp

build/moc/moc_networkdesc.cpp: src/netnode.h \
		src/netlink.h \
		src/networkdesc.h \
		src/networkdesc.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/networkdesc.h -o build/moc/moc_networkdesc.cpp

build/moc/moc_networkgraphics.cpp: src/netlink.h \
		src/netnode.h \
		src/networkdesc.h \
		src/networkgraphics.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/networkgraphics.h -o build/moc/moc_networkgraphics.cpp

compiler_rcc_make_all: qrc_media.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_media.cpp
qrc_media.cpp: media.qrc \
		pics/server.png \
		pics/cloud.png \
		pics/node.png
	/usr/bin/rcc -name media media.qrc -o qrc_media.cpp

compiler_image_collection_make_all: build/ui/qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) build/ui/qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: build/ui/ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) build/ui/ui_mainwindow.h
build/ui/ui_mainwindow.h: ui/mainwindow.ui
	/usr/bin/uic ui/mainwindow.ui -o build/ui/ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

build/obj/main.o: src/main.cpp src/mainwindow.h \
		src/networkdesc.h \
		src/netnode.h \
		src/netlink.h \
		src/networkgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/main.o src/main.cpp

build/obj/mainwindow.o: src/mainwindow.cpp src/netnode.h \
		src/netlink.h \
		src/networkdesc.h \
		src/mainwindow.h \
		src/networkgraphics.h \
		build/ui/ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/mainwindow.o src/mainwindow.cpp

build/obj/iniparser.o: src/iniparser.cpp src/iniparser.h \
		src/dictionary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/iniparser.o src/iniparser.cpp

build/obj/dictionary.o: src/dictionary.cpp src/dictionary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/dictionary.o src/dictionary.cpp

build/obj/netnode.o: src/netnode.cpp src/netnode.h \
		src/netlink.h \
		src/networkdesc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/netnode.o src/netnode.cpp

build/obj/netlink.o: src/netlink.cpp src/netlink.h \
		src/netnode.h \
		src/networkdesc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/netlink.o src/netlink.cpp

build/obj/networkdesc.o: src/networkdesc.cpp src/networkdesc.h \
		src/netnode.h \
		src/netlink.h \
		src/iniparser.h \
		src/dictionary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/networkdesc.o src/networkdesc.cpp

build/obj/networkgraphics.o: src/networkgraphics.cpp src/networkgraphics.h \
		src/netlink.h \
		src/netnode.h \
		src/networkdesc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/networkgraphics.o src/networkgraphics.cpp

build/obj/moc_mainwindow.o: build/moc/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/moc_mainwindow.o build/moc/moc_mainwindow.cpp

build/obj/moc_netnode.o: build/moc/moc_netnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/moc_netnode.o build/moc/moc_netnode.cpp

build/obj/moc_netlink.o: build/moc/moc_netlink.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/moc_netlink.o build/moc/moc_netlink.cpp

build/obj/moc_networkdesc.o: build/moc/moc_networkdesc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/moc_networkdesc.o build/moc/moc_networkdesc.cpp

build/obj/moc_networkgraphics.o: build/moc/moc_networkgraphics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/moc_networkgraphics.o build/moc/moc_networkgraphics.cpp

build/obj/qrc_media.o: qrc_media.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/obj/qrc_media.o qrc_media.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

